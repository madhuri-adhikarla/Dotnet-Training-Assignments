@model EmployeeTrainingProject.Models.TrainingProjectViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Html.EnableClientValidation(true);
}

<h2>Edit</h2>


@if (Model != null)
{

    using (Html.BeginForm("Update", "Employees"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Employee</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Employee.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Employee.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Employee.Name, Model.Employee.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Employee.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Employee.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Employee.Salary, null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Employee.Salary, "", new { @class = "text-danger" })
                </div>
            </div>

            @{

                var deptNameList = Model.Departments;

            }

            <div class="form-group">
                @Html.LabelFor(model => model.Departments, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Employee.DepartmentId, new SelectList(deptNameList, "DepartmentId", "DepartmentName"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Departments, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Locations, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Employee.LocationID, new SelectList(Model.Locations, "LocationId", "LocationName"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Locations, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
}
else
{
    <h2>Something Went Wrong! Try Again...</h2>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@Scripts.Render("~/Scripts/jquery.validate.min.js")
@Scripts.Render("~/Scripts/jquery.validate.unobtrusive.min.js")

